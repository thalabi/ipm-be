server.port=${PORT}

server.ssl.key-store=classpath:localhost-certificate.p12
server.ssl.key-store-password=password
server.ssl.key-store-type=pkcs12
server.ssl.key-alias=springboot

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://localhost:8083/realms/ipm

keycloak.username-attribute: preferred_username



h2.server.port=9093
spring.h2.console.enabled=false
application.security.disableSecurity=false


application.security.corsFilter.corsUrlsToAllow=https://localhost:4200

application.security.corsFilter.corsMaxAgeInSecs=3600
# set tempFilesCleanup intervalInMilliseconds to 600000 (10 minutes)
application.task.tempFilesCleanup.intervalInMilliseconds=600000
# set purgePositionSnapshots intervalInMilliseconds to 86,400,000 (24 hours)
application.task.purgePositionSnapshots.intervalInMilliseconds=86400000

spring.output.ansi.enabled=always

org.apache.commons.beanutils.level=SEVERE

spring.jpa.open-in-view=false

# mvn jasypt:encrypt-value -Djasypt.encryptor.password="the password" -Djasypt.plugin.value="theValueYouWantToEncrypt"
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD:}

# H2 database
#spring.datasource.url=jdbc:h2:${user.home}/ipm-db/ipm;AUTO_SERVER=TRUE
#spring.datasource.url=jdbc:h2:${user.home}/ipm-db/ipm
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.datasource.password=ENC(SWO1p/71/Zy+FROdOFN6/Q==)

# Postgres database
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Oracle database
#spring.datasource.url=jdbc:oracle:thin:@kerneldc.com:1522:sr22
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.username=ipm
#spring.datasource.password=ipm

# Use upper case table names for User and Group entities
spring.jpa.hibernate.naming.physical-strategy=com.kerneldc.common.domain.UpperCaseNamingStrategy

# batch size
spring.jpa.properties.hibernate.jdbc.batch_size=1000
# group inserts by entity
spring.jpa.properties.hibernate.order_inserts=true

spring.data.rest.basePath=/protected/data-rest

# To create a script with db ddl statements
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:liquibase/changelog-master.xml
spring.jpa.hibernate.ddl-auto=none

# File upload limits
spring.servlet.multipart.max-file-size=128MB
spring.servlet.multipart.max-request-size=128MB

# Email
spring.mail.host=smtp1.sympatico.ca

application.email.dailyMarketValueNotificationFrom=${APP_FROM_EMAIL_ADDRESS}
application.email.dailyMarketValueNotificationTo=${MARKET_VALUE_NOTIFICATION_EMAIL_ADDRESS}

# Instrument date due
instrument.due.days.to.notify=${INSTRUMENT_DUE_DAYS_TO_NOTIFY}
application.email.instrumentDueNotificationFrom=${APP_FROM_EMAIL_ADDRESS}
application.email.instrumentDueNotificationTo=${INSTRUMENT_DUE_NOTIFICATION_EMAIL_ADDRESS}
# Fixed income instrument report
application.email.fixedIncomeInstrumentReportFrom=${APP_FROM_EMAIL_ADDRESS}
application.email.fixedIncomeInstrumentReportTo=${FIXED_INCOME_INSTRUMENT_REPORT_EMAIL_ADDRESS}
# FreeMaker
dailyMarketValueNotification.template.upArrowUrl=https://ipm.kerneldc.com/assets/arrow-up-right-green.png
dailyMarketValueNotification.template.downArrowUrl=https://ipm.kerneldc.com/assets/arrow-down-right-red.png

# Actuator
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.shutdown.enabled=true
management.endpoint.beans.enabled=true
management.endpoints.web.exposure.include=health,shutdown,beans

# method is either sms or email
notification.balance-total.notification.method=sms

# Maven placeholders are surrounded by @
build.timestamp=@timestamp@ UTC
build.version=@version@

# Alpha Vantage
alphavantage.api.key=ENC(cP9wrM0Ck9rGqtOPwhfurUW6RFw4saxa/m1MR8ce7FEAmVzRoCdUIz4P2FQZ1blC3FZAfATD3DVQyzzP6Gc7mg==)
