server.port=6003
h2.server.port=9093
spring.h2.console.enabled=false
application.security.disableSecurity=false


# jwtExpirationInMinutes default is 600 (10 hrs)
#application.security.jwt.token.jwtExpirynMinutes=1
#application.security.jwt.token.resetPasswordJwtExpiryInMinutes=1
#application.security.enableTestSecretKey=true
application.security.corsFilter.corsUrlsToAllow=http://localhost:4200,http://localhost:8081,http://kerneldc.com
application.security.corsFilter.corsMaxAgeInSecs=3600
# set tempFilesCleanup intervalInMilliseconds to 600000 (10 minutes)
application.task.tempFilesCleanup.intervalInMilliseconds=600000
# set purgePositionSnapshots intervalInMilliseconds to 86,400,000 (24 hours)
application.task.purgePositionSnapshots.intervalInMilliseconds=86400000

spring.output.ansi.enabled=always
logging.level.com.kerneldc=debug
logging.level.com.kerneldc.springsecurityjwt.security.JwtUtil=debug

org.apache.commons.beanutils.level=SEVERE

spring.jpa.open-in-view=false


# To encrypt strings, use $ java -cp jasypt-1.9.3.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI algorithm=PBEWithMD5AndTripleDES password=<encryption-password> input=<password-to-encrypt>
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD:}
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator
jasypt.encryptor.algorithm=PBEWithMD5AndTripleDES

# H2 database
#spring.datasource.url=jdbc:h2:${user.home}/ipm-db/ipm;AUTO_SERVER=TRUE
spring.datasource.url=jdbc:h2:${user.home}/ipm-db/ipm
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
spring.datasource.password=ENC(SWO1p/71/Zy+FROdOFN6/Q==)
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Oracle database
#spring.datasource.url=jdbc:oracle:thin:@kerneldc.com:1522:sr22
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.username=ipm
#spring.datasource.password=ipm

# Use upper case table names for User and Group entities
spring.jpa.hibernate.naming.physical-strategy=com.kerneldc.common.domain.UpperCaseNamingStrategy

# log sql statements
#logging.level.org.hibernate.SQL=debug
# log sql binding parameters only
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
# log sql all parameters
#logging.level.org.hibernate.type.descriptor.sql=trace
# log transactions
#logging.level.org.springframework.orm.jpa.JpaTransactionManager=debug

#spring.jpa.properties.hibernate.generate_statistics=true

# batch size
spring.jpa.properties.hibernate.jdbc.batch_size=1000
# group inserts by entity
spring.jpa.properties.hibernate.order_inserts=true

spring.data.rest.basePath=/data-rest

# To create a script with db ddl statements
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:liquibase/changelog-master.xml
spring.jpa.hibernate.ddl-auto=none

# File upload limits
spring.servlet.multipart.max-file-size=128MB
spring.servlet.multipart.max-request-size=128MB

# Email
spring.mail.host=smtp1.sympatico.ca

application.email.resetPasswordEmailFrom=noreply-ipm@kerneldc.com
application.email.dailyMarketValueNotificationTo=tarif.halabi@gmail.com
application.email.dailyMarketValueNotificationFrom=noreply-ipm@kerneldc.com

# Actuator
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=health,shutdown

# method is either sms or email
notification.balance-total.notification.method=sms
